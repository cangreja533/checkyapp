@use 'sass:math';

@mixin background{
    background-repeat: no-repeat;
    background-position: center center;
    background-size: cover;
}
@mixin background-parallax{
    // background-position: center;
    // background-repeat: no-repeat;
    background-attachment: fixed !important;
    background-size: cover !important;
}

@mixin filter($filter-color){
  height: 100%;
  width: 100%;
  background-color: $filter-color;
}
// Botoner
@mixin button ($radius, $background-color, $border-size, $border-color , $font-size, $color, $text-decoration, $text-transform){
    border-radius: $radius;
    border-bottom: $border-size solid $border-color;
    background-color: $background-color;
    font-family: $font-title;
    font-size: $font-size;
    color: $color;
    text-decoration: $text-decoration;
    text-align: center;
    text-transform: $text-transform;
    @media #{$x-large-only} { font-size: calc( #{$font-size} + .3em);}
}

// Filtros de fondo (main)
@mixin filter-linear-gradient ($one-color,$porce-one, $two-color,$porce-two, $three-color,$porce-three){
    background-color: $one-color;
    background: -moz-linear-gradient(top, $one-color $porce-one, $two-color $porce-one, $three-color $porce-three);
    background: -webkit-gradient(left top, left bottom, color-stop(0%, $one-color), color-stop($porce-two, $two-color), color-stop($porce-three, $three-color));
    background: -webkit-linear-gradient(top, $one-color $porce-one, $two-color $porce-two, $three-color $porce-three);
    background: -o-linear-gradient(top, $one-color $porce-one,  $two-color $porce-two, $three-color $porce-three);
    background: -ms-linear-gradient(top, $one-color $porce-one,  $two-color $porce-two, $three-color $porce-three);
    background: linear-gradient(to bottom, $one-color $porce-one,  $two-color $porce-two, $three-color $porce-three);
}


// Flexbox
@mixin container( $ancho-min, $ancho-max){
	max-width: $ancho-max;
	width: $ancho-min;
	margin-right: auto;
	margin-left: auto;
	@media #{$small-general} { 
		margin: 0 auto;
		max-width: $ancho-max;
		width: $ancho-min;
	}
}
@mixin container-fluid{
	width: 100%;
	margin-right: auto;
	margin-left: auto;
	box-sizing: border-box;
}
@mixin row {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; 
}
@mixin d-flex{
	display: -ms-flexbox !important;
	display: flex !important;
}
// Columnas Flex
@mixin make-grid-columns( $size, $grid-columns ){
	-ms-flex: 0 0 math.percentage(math.div($size, $grid-columns));
	flex: 0 0 math.percentage(math.div($size, $grid-columns));
    max-width: math.percentage(math.div($size, $grid-columns));
}

@mixin make-width-columns( $ancho ){
	-ms-flex: 0 0 math.percentage(math.div($ancho, 100)) !important;
	flex: 0 0 math.percentage(math.div($ancho, 100)) !important;
    // margin: 0 auto;
}

@mixin width( $ancho ){
    width: math.percentage(math.div($ancho, 100)) !important;
    margin: 0 auto;
}
// Grid 
@mixin grid ($min, $max, $gap){
  display: grid;
	grid-template-columns: repeat(auto-fit, minmax($min, $max));
	gap: $gap;
	padding: $base-margin*3  0px;
}

// Tama√±os fuentes
// https://css-tricks.com/snippets/css/fluid-typography/
@function strip-unit($value) {
    @return math.div($value, $value * 0 + 1);
  }
  
  @mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);
  
    @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
      & {
        font-size: $min-font-size;
        @media screen and (min-width: $min-vw) {
          font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
        }
        @media screen and (min-width: $max-vw) {
          font-size: $max-font-size;
        }
      }
    }
  }